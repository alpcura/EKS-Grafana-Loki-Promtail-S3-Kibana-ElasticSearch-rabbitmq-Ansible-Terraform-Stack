apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: rabbitmq-staging
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: messaging
  source:
    repoURL: https://charts.bitnami.com/bitnami
    chart: rabbitmq
    targetRevision: 15.3.2
    helm:
      releaseName: rabbitmq
      values: |
        fullnameOverride: rabbitmq

        auth:
          username: appuser
          password: apppassword

        persistence:
          enabled: false

        global:
          imageRegistry: public.ecr.aws
          security:
            allowInsecureImages: true

        image:
          registry: public.ecr.aws
          repository: bitnami/rabbitmq
          tag: "4.0.6-debian-12-r3"

        # Yalnızca cluster içi erişim (UI dahil)
        service:
          type: ClusterIP

        # Basit & toleranslı probelar
        # (startup/readiness TCP; liveness'ı 15672 TCP yapıyoruz)
        customStartupProbe:
          tcpSocket: { port: amqp }     # 5672
          initialDelaySeconds: 20
          periodSeconds: 5
          failureThreshold: 60
        customReadinessProbe:
          tcpSocket: { port: amqp }     # 5672
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 30
        customLivenessProbe:
          tcpSocket: { port: 15672 }    # management
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 10

        # Ingress/ALB tamamen KAPALI
        ingress:
          enabled: false

        # İki ayrı clusterIP servis (uygulamalar bunları kullanır)
        extraDeploy:
          - |
            apiVersion: v1
            kind: Service
            metadata:
              name: service-1
              labels:
                app.kubernetes.io/name: rabbitmq
                app.kubernetes.io/instance: rabbitmq
            spec:
              type: ClusterIP
              selector:
                app.kubernetes.io/name: rabbitmq
                app.kubernetes.io/instance: rabbitmq
              ports:
                - name: amqp
                  port: 5672
                  targetPort: amqp
          - |
            apiVersion: v1
            kind: Service
            metadata:
              name: service-2
              labels:
                app.kubernetes.io/name: rabbitmq
                app.kubernetes.io/instance: rabbitmq
            spec:
              type: ClusterIP
              selector:
                app.kubernetes.io/name: rabbitmq
                app.kubernetes.io/instance: rabbitmq
              ports:
                - name: amqp
                  port: 5672
                  targetPort: amqp
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Replace=true
