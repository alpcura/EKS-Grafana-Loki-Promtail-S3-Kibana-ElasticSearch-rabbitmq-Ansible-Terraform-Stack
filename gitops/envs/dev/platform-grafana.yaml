apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana-dev
  namespace: argocd
  labels:
    env: dev
spec:
  project: dev
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: grafana              # <-- griffin değil
    targetRevision: 8.5.11
    helm:
      values: |
        adminUser: admin
        adminPassword: admin123

        service:
          type: ClusterIP
          port: 3000

        # readiness/liveness net
        readinessProbe:
          httpGet: { path: /api/health, port: 3000 }
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 12
        livenessProbe:
          httpGet: { path: /api/health, port: 3000 }
          initialDelaySeconds: 60
          periodSeconds: 20
          failureThreshold: 6

        persistence: { enabled: false }

        # İstersen sonra açarız — ALB kapalı
        ingress: { enabled: false }

        # Loki datasource (loki logging ns’de)
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - name: Loki
                type: loki
                url: http://loki.logging.svc.cluster.local:3100
                access: proxy
                isDefault: true
  destination:
    server: https://kubernetes.default.svc
    namespace: logging
  syncPolicy:
    automated: { prune: true, selfHeal: true }
    syncOptions: [CreateNamespace=true]
